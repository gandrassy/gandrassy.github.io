Annot√°ci√≥k

- vez√©relhetik a compilert
- vagy tartalmazhatnak fut√°sidej˚ adatokat

An annot√°ci√≥k a deklar√°ci√≥kban haszn√°latosak: oszt√°lyok, v√°ltoz√≥k, met√≥dusok eset√©ben.

El≈ëre defini√°lt annot√°ci√≥k:
@Deprecated      - elavult k√≥dr√©szlet, amelyet cser√©lni kell. a compiler warning-ot gener√°l
@Override        - a superclass met√≥dus√°nak fel√ºl√≠r√°sa
@SupressWarnings - k√©ri, hogy a compiler ne gener√°ljon warningot
@SafeVarargs
@FunctionalInterface

@Nonnull - ha ez az annot√°ci√≥ rajta van valamin, √©s a compiler olyan k√≥dr√©szletet l√°t, aminek
           eredm√©nyek√©pp null lehet, akkor warningot dob.

Az annot√°ci√≥k annot√°ci√≥i:
@Retention  - hogy legyen az annot√°ci√≥ tartalma t√°rolva
               SOURCE:   csak a forr√°sban, mint egy komment
               CLASS:    ford√≠t√°st vez√©rl≈ë annot√°ci√≥
               RUMNTIME: fut√°s k√∂zben is el√©rhet≈ë, pl. atrido metadata
@Documented - ez az annot√°ci√≥ ahhoz kell, hogy megjelenjen a javadoc-ban
@Target     - hogy az annot√°ci√≥ mire alkalmazhat√≥: annot√°ci√≥ra, oszt√°lyra, konstrukt≈ërre stb.
@Inherited  - az annot√°ci√≥k a szuperclasst√≥l √∂r√∂kl≈ëdjenek (alapb√≥l nem √∂r√∂kl≈ëdnek)
@Repetable  - t√∂bbsz√∂r is megism√©telhet≈ëv√© teszi az annot√°ci√≥kat

Saj√°t annot√°ci√≥ l√©trehoz√°sa:

@Documented
@interface MyAnnotation {
   String name();
   int serialNumber() default 1;
   String lastModified() default "N/A";
   String[] reviewers();
}


haszn√°lata: 

@MyAnnotation( name="John Doe", serialNumber=2, reviewers={"Alice", "Bob"} )
public void someMethod() { }

